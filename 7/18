SELECT REPLACE('010-1111-1111', '-', '*')FROM DUAL;

SELECT ENAME, SAL, NVL(COMM,0) FROM EMP;

SELECT ENAME, SAL, NVL2(COMM,'O', 'X') FROM EMP;
    
--실습 6-47

SELECT EMPNO, ENAME, JOB, SAL,
    DECODE(JOB, 
           'MANAGER', SAL * 1.1, 
           'SALESMAN', SAL * 1.05,
           'ANALYST', SAL, 
           SAL * 1.03) AS UPSAL
FROM EMP;
--CASE문을 사용해봅시다.
SELECT EMPNO, ENAME, JOB, SAL,
    CASE JOB
         WHEN 'MANAGER' THEN SAL * 1.1
         WHEN 'SALESMAN' THEN SAL * 1.05
         WHEN 'ANALYST' THEN SAL
         ELSE SAL * 1.03
    END AS UPSAL
FROM EMP;

--연습문제 1
SELECT EMPNO,
       RPAD(SUBSTR(EMPNO,1,2),4,'*') AS MASKING_EMPNO,
       ENAME,
       RPAD(SUBSTR(EMPNO,1,1),5,'*') AS MASKING_ENAME
       FROM EMP
       WHERE LENGTH(ENAME) >= 5 AND LENGTH(ENAME) < 6;
       
--연습문제 2
SELECT EMPNO,
       ENAME,
       SAL,
       ROUND(SAL / 21.5,1) AS DAY_PAY,
       ROUND((SAL / 21.5)/8,1) AS TIME_PAY
       FROM EMP;
       
--연습문제 3
SELECT EMPNO, ENAME, HIREDATE,
       TO_CHAR(NEXT_DAY(ADD_MONTHS(HIREDATE, 3),'월요일'), 'YYYY-MM-DD') AS "정직원 되는날",
       NVL2(COMM, TO_CHAR(COMM), 'N/A')
FROM EMP;

--연습문제 4
SELECT EMPNO, ENAME, MGR,
    CASE
        WHEN MGR IS NULL THEN TO_CHAR('0000')
        WHEN SUBSTR(MGR, 1, 2) = 75 THEN TO_CHAR('5555')
        WHEN SUBSTR(MGR, 1, 2) = 76 THEN TO_CHAR('6666')
        WHEN SUBSTR(MGR, 1, 2) = 77 THEN TO_CHAR('7777')
        WHEN SUBSTR(MGR, 1, 2) = 78 THEN TO_CHAR('8888')
        ELSE TO_CHAR(MGR)
    END AS "직급 변환값"
FROM EMP;


--특정조건
SELECT EMPNO, ENAME, SAL,
       CASE 
            WHEN SAL >= 3000 THEN '상위권'
            WHEN SAL > 1000 AND SAL < 3000 THEN '중위권'
            ELSE '하위권'
       END AS 급여수준
FROM EMP;

--집합연산 다중행연산 묶어서 처리하기
SELECT ROUND(AVG(SAL), 2) FROM EMP
WHERE DEPTNO = 30;

SELECT ENAME, SAL, DEPTNO FROM EMP;
--
SELECT ROUND(AVG(SAL), 2) FROM EMP GROUP BY DEPTNO;

--부서별 급여의 합??
SELECT DEPTNO, SUM(SAL) FROM EMP
GROUP BY DEPTNO;

--급여의 합계
SELECT SUM(DISTINCT SAL),
       SUM(ALL SAL),
       SUM(SAL)
FROM EMP;
--
SELECT COUNT(*) FROM EMP;
--부서별로 몇명이야??
SELECT COUNT(*) FROM EMP
GROUP BY DEPTNO
ORDER BY DEPTNO;

--부서 번호가 10번인 사원들의 최대급여(MAX)를 출력하세요.
SELECT MAX(SAL) FROM EMP
WHERE DEPTNO = 20;

SELECT * FROM EMP WHERE DEPTNO = 20;

--날짜에 MAX가???
-- 부서번호가 20번인 직원 중 가장 최근에 입사한 사람은 몇일에 입사 하였나?
SELECT MAX(HIREDATE) FROM EMP
WHERE DEPTNO = 20;
--20번 부서 직원 중 가장 오랫동안 회사를 다닌 사람의 입사일은???
SELECT MIN(HIREDATE) FROM EMP
WHERE DEPTNO = 20;

--HAVING 절 GROUP BY의 조건
SELECT DEPTNO, JOB, ROUND(AVG(SAL),2) FROM EMP
GROUP BY DEPTNO, JOB
HAVING ROUND(AVG(SAL), 2) >= 2000
ORDER BY DEPTNO, JOB;

--WHERE절 HAVING절 같이 사용해 봅시다.
SELECT DEPTNO, JOB, AVG(SAL) FROM EMP
WHERE SAL <= 3000
GROUP BY DEPTNO, JOB
HAVING AVG(SAL) >= 2000
ORDER BY DEPTNO, JOB;
--------------------------------------------------------------------------------------------------------------------------------------------------------------
SELECT * FROM DEPT;
SELECT * FROM SALGRADE;
SELECT * FROM BONUS;

SELECT * FROM EMP;

--P.212 연습문제
--연습문제 1번
SELECT DEPTNO,
       ROUND(AVG(SAL),0) AS AVG_SAL, 
       MAX(SAL) AS MAX_SAL, 
       MIN(SAL) AS MIN_SAL, 
       COUNT(SAL) AS CNT FROM EMP
       GROUP BY DEPTNO
       ORDER BY DEPTNO DESC;

--연습문제 2번
SELECT JOB, COUNT(JOB) AS "COUNT(*)" FROM EMP
GROUP BY JOB
HAVING COUNT(JOB) >=3
ORDER BY JOB;
       
--연습문제 3번
SELECT SUBSTR(HIREDATE, 1, 2), COUNT(*)
FROM EMP
GROUP BY SUBSTR(HIREDATE, 1, 2), DEPTNO;

SELECT TO_CHAR(HIREDATE, 'YYYY'), DEPTNO, COUNT(*)
FROM EMP
GROUP BY TO_CHAR(HIREDATE, 'YYYY'), DEPTNO
ORDER BY TO_CHAR(HIREDATE, 'YYYY');
-------------------------------------------
SELECT *
FROM MOVIES;
--영화 1번
SELECT GENRE, COUNT(*)
FROM MOVIES
GROUP BY GENRE
ORDER BY COUNT(*) DESC;

--영화 2번
SELECT TITLE
FROM MOVIES
WHERE RUNTIME >= 130
ORDER BY RUNTIME;

--영화 3번
SELECT
        SUM(CASE
                WHEN RELEASE_DATE <= TO_DATE('2014-12-31', 'YYYY-MM-DD') THEN 1 ELSE 0
                END) AS "2014이전",
        SUM(CASE
                WHEN RELEASE_DATE > TO_DATE('2014-12-31', 'YYYY-MM-DD') THEN 1 ELSE 0
                END) AS "2015이후"
FROM MOVIES;

--영화 4번
SELECT AVG(RUNTIME)
FROM MOVIES;

--영화 5번 SUB QUERY

SELECT TITLE, RUNTIME FROM MOVIES
WHERE RUNTIME = (SELECT MIN(RUNTIME) FROM MOVIES);

SELECT TITLE, RUNTIME FROM MOVIES
WHERE RUNTIME IN((SELECT MIN(RUNTIME) FROM MOVIES), (SELECT MAX(RUNTIME) FROM MOVIES));



