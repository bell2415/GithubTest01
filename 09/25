라즈베리에서 아두이노로 메세지받기(라즈베리에는mosquitto_pub -t MyOffice/Indoor/Temp -m 3.14 -u mqtt_boy -P 1234)
// esp32_subscribe_DHT11.ino
#include <WiFi.h>
#include <PubSubClient.h>
const char* ssid = "pcroom";
const char* password = "12345678";
const char* userId = "mqtt_ship";
const char* userPw = "1234";
const char* clientId = userId;
const char *topic = "MyOffice/Indoor/#";
const char* serverIPAddress = "192.168.0.2";
char messageBuf[100];

void callback(char* topic, byte* payload, unsigned int length) { 
 Serial.println("Message arrived!\nTopic: " + String(topic));
 Serial.println("Length: "+ String(length, DEC));
 
 strncpy(messageBuf, (char*)payload, length);
 messageBuf[length] = '\0';
 Serial.println("Payload: "+ String(messageBuf) + "\n\n");
}
WiFiClient wifiClient; 

PubSubClient client(serverIPAddress, 1883, callback, wifiClient);
void setup() {
 Serial.begin(115200);
 Serial.print("\nConnecting to "); Serial.println(ssid);
 WiFi.begin(ssid, password);
 while (WiFi.status() != WL_CONNECTED) {
   Serial.print("."); delay(500);
 }
 Serial.println("\nWiFi Connected\nConnecting to broker");
 while ( !client.connect(clientId, userId, userPw) ){ 
   Serial.print("*"); delay(500);
 }
 Serial.println("\nConnected to broker");
 client.subscribe(topic);
}
void loop() {
 client.loop();
}
------------------------------------------------------------------------------------
불 켜졌다꺼지게하기(라즈베리 입력:mosquitto_pub -t MyOffice/Indoor/Lamp -m 1 -u mqtt_boy -P 1234,mosquitto_pub -t MyOffice/Indoor/Lamp -m 0 -u mqtt_boy -P 1234)
// esp32_subscribe_LED.ino
#include <WiFi.h>
#include <PubSubClient.h>
const char* ssid = "pcroom";
const char* password = "12345678";

const char* userId = "mqtt_ship";
const char* userPw = "1234";
const char* clientId = userId;
char *topic = "MyOffice/Indoor/Lamp";
char* server = "192.168.0.2"; 
char messageBuf[100];

void callback(char* topic, byte* payload, unsigned int length) {  
  Serial.println("Message arrived!\nTtopic: " + String(topic));
  Serial.println("Length: "+ String(length, DEC));
  strncpy(messageBuf, (char*)payload, length);
  messageBuf[length] = '\0';
  String ledState = String(messageBuf);
  Serial.println("Payload: "+ ledState + "\n\n");
  if( ledState == "1"  ){      digitalWrite(LED_BUILTIN, LOW);
  } else if (ledState=="0") { digitalWrite(LED_BUILTIN, HIGH);
  } else {                      Serial.println("Wrong Message"); }
}
WiFiClient wifiClient; 
PubSubClient client(server, 1883, callback, wifiClient);

void setup() {
  pinMode(LED_BUILTIN, OUTPUT);
  Serial.begin(115200);
  
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");     delay(1000);
  }
  Serial.println("\nWiFi Connected");
 
  while ( !client.connect(clientId, userId, userPw) ){ 
    Serial.print("*");     delay(1000);
  }
  Serial.println("\nConnected to broker");
  Serial.println(String("Subscribing! topic = ") + topic);
  client.subscribe(topic);
 }

void loop() {   client.loop(); }
-------------------------------------------------------------------
